[{"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/index.js":"1","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/reportWebVitals.js":"2","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/App.js":"3","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Form/index.js":"4","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/profile.js":"5","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/main/index.js":"6","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/arrays/index.js":"7","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/user/index.js":"8","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/list/index.js":"9","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/index.js":"10","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Messages/index.js":"11","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Items/index.js":"12","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Pagin/index.js":"13","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Send/index.js":"14","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Exercise/index.js":"15","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/UsersAccount/index.js":"16","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/edit.js":"17","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/login/index.js":"18","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/login.js":"19","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/user.js":"20","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/register.js":"21","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/message.js":"22","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/index.js":"23"},{"size":500,"mtime":1610394934700,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1610394934700,"results":"26","hashOfConfig":"25"},{"size":1892,"mtime":1614627718132,"results":"27","hashOfConfig":"25"},{"size":3087,"mtime":1612648151730,"results":"28","hashOfConfig":"25"},{"size":977,"mtime":1613450284586,"results":"29","hashOfConfig":"25"},{"size":2304,"mtime":1612657678091,"results":"30","hashOfConfig":"25"},{"size":5385,"mtime":1612658424951,"results":"31","hashOfConfig":"25"},{"size":875,"mtime":1610423285265,"results":"32","hashOfConfig":"25"},{"size":1070,"mtime":1611257048618,"results":"33","hashOfConfig":"25"},{"size":1182,"mtime":1613705499359,"results":"34","hashOfConfig":"25"},{"size":1215,"mtime":1611027847448,"results":"35","hashOfConfig":"25"},{"size":671,"mtime":1612654751804,"results":"36","hashOfConfig":"25"},{"size":1094,"mtime":1611723941017,"results":"37","hashOfConfig":"25"},{"size":1622,"mtime":1611257048617,"results":"38","hashOfConfig":"25"},{"size":959,"mtime":1611257048617,"results":"39","hashOfConfig":"25"},{"size":2945,"mtime":1611257048618,"results":"40","hashOfConfig":"25"},{"size":2195,"mtime":1614464248669,"results":"41","hashOfConfig":"25"},{"size":2669,"mtime":1614463352195,"results":"42","hashOfConfig":"25"},{"size":1663,"mtime":1614639389450,"results":"43","hashOfConfig":"25"},{"size":308,"mtime":1614629105721,"results":"44","hashOfConfig":"25"},{"size":1297,"mtime":1614638566723,"results":"45","hashOfConfig":"25"},{"size":393,"mtime":1614629032079,"results":"46","hashOfConfig":"25"},{"size":1050,"mtime":1614637734582,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"i071t2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/index.js",[],["103","104"],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/reportWebVitals.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/App.js",["105"],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Form/index.js",["106"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    min-width: ${props => props.width ? props.width : \"300px\"};\n    min-height: ${props => props.height ? props.height : \"100px\"};\n    max-width: ${props => props.width ? props.width : \"50%\"};\n    max-height: ${props => props.height ? props.height : \"300px\"};\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n\n    ${props => props.bgcolor && \"background-color:\" + props.bgcolor + \";\"}\n    & > span {\n        margin: 5px;\n    }\n`;\nconst FormInput = styled.input`\n    min-height: 25px;\n    padding: 5px;\n`;\nconst FormButton = styled.button`\n    border-radius: 5px;\n    min-height: 25px;\n`;\nconst FormCheckbox = styled.input.attrs({ type: 'checkbox' })``;\n\nvar timer = null;\n//'onFormComplete' & 'onContainerSelect' are Handlers. \n//They are to capture the effects after clicked on the button or container\n//The 2 interactions I want to capture is when I click on the container and the button\nconst Form = ({ name, width, height, bgcolor, onFormComplete, onContainerSelect }) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n    const [msg, setMsg] = useState(\"\");\n    const [check1, setCheck1] = useState(false)\n    const [check2, setCheck2] = useState(false)\n    const [check3, setCheck3] = useState(false);\n\n    useEffect(() => {\n        setCheck1(check3);\n        setCheck2(check3);\n    }, [check3]);\n\n    useEffect(() => {\n        //detect the bgcolor\n    }, [bgcolor]);\n\n/*\n    useEffect(() => {\n        timer = setInterval(() => {\n            console.log(\"time is running out\")\n        }, 1000)\n        return () => {\n            //this is death\n            clearInterval(timer);\n        }\n    }, []);\n*/\n\n    return <Container onClick={() => {\n        onContainerSelect(name)\n    }} width={width} height={height} bgcolor={bgcolor}>\n        <FormInput type='text' placeholder='name' onChange={(e) => { setUsername(e.target.value) }} />\n        <FormInput type='password' placeholder='pass' onChange={(e) => { setPass(e.target.value) }} />\n        <FormInput type='text' placeholder='msg' onChange={(e) => { setMsg(e.target.value) }} />\n        <span>\n            <FormCheckbox onChange={(e) => { setCheck1(e.target.checked) }} checked={check1} /> I agree to sell my soul\n        </span>\n        <span>\n            <FormCheckbox onChange={(e) => { setCheck2(e.target.checked) }} checked={check2} /> I agree to sell my life\n        </span>\n        <span>\n            <FormCheckbox onChange={(e) => { setCheck3(e.target.checked) }} /> I agree to give up all of the above\n        </span>\n        <FormButton onClick={() => {\n            onFormComplete(username, pass, msg, check1, check2, check3)\n        }}>Send Message</FormButton>\n    </Container>\n}\n\nForm.defaultProps = {\n    width: null,\n    height: null,\n    bgcolor: null,\n    //onFormComplete & onContainerSelect by default is gonna be an empty function\n    onFormComplete: () => { },\n    onContainerSelect: () => { }\n}\nexport default Form;",["107","108"],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/profile.js",["109"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\n\n//axios https://advdyn2021.herokuapp.com/allusers -> get all users\n//axios https://advdyn2021.herokuapp.com/alldiscussions -> get all discussions\n//axios https://advdyn2021.herokuapp.com/user_by_id/5 -> get a single user by it's id\n\nconst Profile = () => {\n    const [p, setP] = useState({});\n    const params = useParams()\n    const GetData = async () => {\n        // var resp3 = axios.get(\"https://advdyn2021.herokuapp.com/allusers\");\n        // setDs([...resp2.data]);\n        var resp = await axios.get(\"https://advdyn2021.herokuapp.com/user_by_id/\"+params.id);\n        console.log(resp)\n        // console.log(params)\n        setP({...resp.data[0]});\n    }\n    useEffect(() => {\n        GetData();\n    }, [])\n    return <div>\n      <h1>Name: {p.name}</h1>\n      <h2>Age: {p.age}</h2>\n      <h3>Bio: {p.bio}</h3>\n    </div>\n}\nexport default Profile;","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/main/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/arrays/index.js",["110","111","112","113","114","115","116","117"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Pagin from 'comps/Pagin';\nimport Form from 'comps/Form';\nimport Items from 'comps/Items';\n\nimport {\n    useParams,\n  } from \"react-router-dom\";\n\n\nconst Array = () => {\n    const params = useParams();\n    console.log(params.id)\n    const [msgs, setMsgs] = useState([]);\n    const [allmsgs, setAll] = useState([]);\n    const [selectedId, setSelectedId] = useState(null); // this is the state to capture the id; use null here is avoid updating by accident\n    const item_per_page = 3; //3 items per page\n\n    const GetMessages = async () => {\n        var resp = await axios.get(\"https://advdyn2021.herokuapp.com/allmessages\")\n        // console.log(\"get message\", resp)\n        setAll(resp.data);\n        var arr = resp.data.slice(0, 5)\n        setMsgs(arr)\n    }\n\n    const ChangePage = (num) => {//the number that is passed over from the input will be here \n        setMsgs(\n            allmsgs.slice(item_per_page * (num - 1), item_per_page * num)\n        )\n    }\n\n    const FilterPage = (text) => {\n        setMsgs(\n            allmsgs.filter((o) => {\n                return o.username.includes(text)\n            })\n        )\n    }\n\n    const FilterCheck = (checked) => {\n        if (checked) {\n            setMsgs(\n                allmsgs.filter((o) => {\n                    return o.username.length < 5;\n                })\n            )\n        } else {\n            setMsgs(\n                allmsgs\n            )\n        }\n    }\n    const SortMsgs = () => {\n        setMsgs(\n            // allmsgs.sort(sortByUsername)\n            allmsgs.sort((a, b) => {\n                if (a.username > b.username) {\n                    return 1\n                } else if (a.username < b.username) {\n                    return -1\n                } else {\n                    return 0\n                }\n            })\n        )\n    }\n    const SortMsgsDate = () => {\n        setMsgs(\n            allmsgs.sort(sortByDate)\n        )\n    }\n\n    const UpdateMessage = async (username, pass, msg, check1, check2, check3) => {\n        console.log(msg);\n        if (selectedId === null) {\n            return false;\n        }\n        var resp = await axios.post(\"https://advdyn2021.herokuapp.com/editmessage\", {\n            id: selectedId,\n            message: msg\n        })\n        GetMessages();\n    }\n\n    useEffect(() => {\n        GetMessages()\n    }, [])\n\n    return <div>\n        Array Page\n        {msgs.map(o => {\n        var date = new Date(o.created);\n        return <div>\n            <Items\n                id={o.id}\n                onClick={(id) => {\n                    console.log(id)\n                    setSelectedId(id)\n                }}\n                message={o.message}\n                username={o.username}\n                created={o.created}\n                highlight={selectedId === o.id}\n            />\n        </div>\n    })}\n        <Form onFormComplete={UpdateMessage} />\n\n        {/* <input type=\"number\" defaultValue={1} onChange={(e) => {\n            ChangePage(e.target.value)//pass the input value over to the num in the ChangePage function\n        }} />\n        <div>Filter</div>\n        <input type=\"text\" onChange={(e) => {\n            FilterPage(e.target.value)\n        }} />\n        <input type=\"checkbox\" onChange={(e) => {\n            FilterCheck(e.target.checked)\n        }} />\n        <button onClick={SortMsgs}>Sort by Username</button>\n        <button onClick={SortMsgsDate}>Sort by Date</button>\n        <Pagin numpages={Math.ceil(allmsgs.length / 3)}\n            onClickPage={ChangePage}\n        />Math.ceil is used to round up page numbers */}\n    </div>\n}\n\nexport default Array;\n\n/*\nfunction sortByUsername(a, b) {\n    if (a.username > b.username) {\n        return 1\n    } else if (a.username < b.username) {\n        return -1\n    } else {\n        return 0\n    }\n}\n*/\n\nfunction sortByDate(a, b) {\n    //parse the dates, and transfer them into seconds - the real dates for properly comparison\n    var adate = new Date(a.created);\n    var bdate = new Date(b.created);\n    // console.log(adate)\n    if (adate > bdate) {\n        return 1\n    } else if (adate < bdate) {\n        return -1\n    } else {\n        return 0\n    }\n}\n\n/*\nTo Update\n1 - pass the id to the component (if you are using a component)\n2 - have a handler to capture an interaction that passes the id back out to the page\n3 - have a state ready to remember the id to update (setState)\n4 - use the state id for your axios call so you can pass the id + other data to the backend\n5 - make the axios call and re read everything.\n*/\n\n/*\nPAGINATE\narr = arr.slice(0,3); //get the first 3 items on the page\n\npage 1 - item 1, 2, 3 - slice(0,3) - input 1\npage 2 - item 4, 5, 6 - slice(3,6) - input 2\npage 3 - item 7, 8, 9 - slice(6,9) - input 3\n\n3 items per page\nslice(item_per_page*0,item_per_page*1) - page 1 - input 1\nslice(item_per_page*1, item_per_page*2) - page 2 - input 2\nslice(item_per_page*2, item_per_page*3) - page 2 - input 3\n\n# of pages should be amount of items in the array divided by the number of items per page\ne.g. 10 items in the array, 2 items per page = 5 page\n*/\n\n/*\nFILTERS\ncheck for true/false statement\nif the username includes the letter -> return true\n\nchecked, filter for all username that is below 5 characters\n*/\n\n/*\nSORTS\n\na.username > b.username 1\na.username < b.username -1\n== 0\n*/","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/user/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/list/index.js",["118"],"import React, { useState, useEffect } from 'react';\nimport Exercise from 'comps/Exercise';\nimport Send from 'comps/Send';\n\nimport axios from 'axios';\n\nconst List = () => {\n\n  const [info, setInfo] = useState([]);\n\n  useEffect(() => {\n    GetInfo();\n  }, [])\n\n  const HandleFormComplete = async (name, reps, cal) => {\n    var resp = await axios.post(\"https://advdyn2021.herokuapp.com/createexercise\", { name: name, reps: reps, calories: cal })\n    GetInfo()\n  }\n  const GetInfo = async (exercise, reps, cal) => {\n    console.log(exercise, reps, cal)\n    var resp = await axios.get(\"https://advdyn2021.herokuapp.com/allexercises\")\n    setInfo(resp.data)\n    console.log(resp)\n  }\n\n  return <div className=\"list\">\n    <span>\n      <div className=\"sub\">Adding an Exercise</div>\n      <Send\n        onFormComplete={HandleFormComplete}\n      />\n    </span>\n    <span>\n      <div className=\"sub\">Exercise List</div>\n      {info.map((o, i) => <Exercise\n        name={o.name}\n        reps={o.reps}\n        cal={o.calories}\n      />)}\n    </span>\n\n  </div>\n}\n\nexport default List;","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Messages/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Items/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Pagin/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Send/index.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/Exercise/index.js",["119"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  min-width: 200px;\n  max-width: 300px;\n  min-height: 200px;\n  max-height: 300px;\n  border: 1px solid pink;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  position: relative;\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst Subject = styled.div`\n  color: white;\n  min-height: 50px;\n  min-width: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst Row = styled.div`\n  // border: 1px solid grey;\n  min-height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Exercise = ({ name, reps, cal }) => {\n  return <Container>\n    <Row>\n      Name:\n      <span>{name}</span>\n    </Row>\n    <Row>\n      Reps:\n      <span>{reps}</span>\n    </Row>\n    <Row>\n      Calories:\n      <span>{cal}</span>\n    </Row>\n  </Container>\n}\n\nExercise.defaultProps = {\n\n}\n\nexport default Exercise;","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/comps/UsersAccount/index.js",["120","121"],"import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    min-width:300px;\n    min-height: 450px;\n    max-width: 390px;\n    max-height: 600px;\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    // border: red solid 1px;\n    background-color: #FFFFFF;\n    position: relative;\n`;\nconst Tabs = styled.span`\nposition: absolute;\ntop: 5px;\n`;\n\nconst Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\nconst OptionButton = styled.button`\n    min-width: 112px;\n    min-height: 55px;\n    border-radius: 5px 5px 0 0;\n    border: 1px solid black;\n    border-bottom: none;\n    margin-right:10px;\n    \n    ${props => props.bgcolor && \"background-color:\" + props.bgcolor + \";\"}\n`;\nconst OneInput = styled.div`\n    padding-top: 10px;\n    // border: red solid 1px;\n`;\nconst OneInput1 = styled.div`\n    padding-top: 10px;\n    display: ${props => props.display ? props.display : \"block\"};\n`;\nconst FormInput = styled.input`\n    background: #F2F4FB;\n    min-width: 390px;\n    min-height: 45px;\n    border: none;\n    border-radius: 5px;\n    margin: 10px 0 10px 0;\n`;\nconst FormButton = styled.button`\n    max-width: 100%;\n    max-height: 100px;\n    min-width: 390px;\n    min-height: 46px;\n    background: #4285F4;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    border: none;\n    margin-top: 40px;\n    color: #FFF;\n    position: absolute;\n    bottom: 10px;\n    &:hover {\n    background: #003AF0;\n    cursor: pointer;\n    }\n`;\n\nconst UsersAccount = ({ bgcolor1, bgcolor2, text, display, onTabSelect, onRegister, onLogin, }) => {\n\n    const [register, setRegister] = useState(false);\n    const [login, setLogin] = useState(true);\n\n\n\n    return <Container>\n        <Tabs>\n            <OptionButton onClick={() => {\n                // onTabSelect();\n                onRegister();\n                setRegister(false);\n            }} bgcolor={bgcolor1}>Register</OptionButton>\n\n            <OptionButton onClick={() => {\n                // onTabSelect();\n                onLogin();\n                setLogin(false);\n            }} bgcolor={bgcolor2}>Login</OptionButton>\n        </Tabs>\n        <br />\n        <Body>\n            <OneInput>\n                EMAIL\n            <FormInput type=\"text\" placeholder=\"     joe@gmail.com\" />\n            </OneInput>\n            <OneInput>\n                PASSWORD\n            <FormInput type=\"password\" placeholder=\"     password\" />\n            </OneInput>\n            <OneInput1 display={display}>\n                CONFIRM PASSWORD\n            <FormInput type=\"password\" placeholder=\"     confirm password\" />\n            </OneInput1>\n        </Body>\n        <FormButton>{text}</FormButton>\n    </Container>\n}\nUsersAccount.defaultProps = {\n    onRegister: () => { },\n    onLogin: () => { },\n    onTabSelect: () => { }\n}\nexport default UsersAccount;","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/read_data/edit.js",["122","123","124","125","126","127","128"],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/login/index.js",["129","130","131"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Items from 'comps/Items';\nimport { Link, useHistory } from 'react-router-dom';\n\n//ENDPOINTS\n//login -> token\n//verify -> token expired, no token, data of the token - to make sure we are still authorized to route\n//restricted -> if you don't have the secret data from the token. you wont't be allow to connect to the endpoint\n\n// let token = null;\n\nconst Login = () => {\n    const history = useHistory();\n    const [un, setUn] = useState(\"\");\n    const [pass, setPass] = useState(\"\");\n    const [showLogin, setShow] = useState(true);\n\n    const CheckStorage = async () => {\n        var token = await sessionStorage.getItem(\"token\")\n        if (token) {\n            axios.defaults.headers.common['Authorization'] = token;\n            var resp = await axios.get(\"https://advdyn2021.herokuapp.com/verify\");\n            console.log(\"verification\", resp.data);\n            if (resp.data !== \"expired\") {\n                //hide login\n                // setShow(false);\n                history.push(\"/read\");\n            }\n        }\n    }\n\n    const Auth = async () => {\n        var resp2 = await axios.post(\"https://advdyn2021.herokuapp.com/login\",\n            {\n                username: un, //student\n                password: pass //mdia3109\n            }\n        );\n\n        // token = resp2.data;\n\n        axios.defaults.headers.common['Authorization'] = resp2.data; //default\n        sessionStorage.setItem(\"token\", resp2.data); //storing the token in sessionStorage\n        setShow(false);\n        //after logging in, reroute them with history.push(\"/read\");\n\n        console.log(\"identifier/token\", resp2.data);\n    }\n\n    const Restricted = async () => {\n        //create a new post endpoint\n        var resp = await axios.post(\"https://advdyn2021.herokuapp.com/restricted\",\n            {\n                //nothing to post, pretend to post something over to create\n                itemname: \"item 1\"\n            },\n            // {\n            //     headers: {\n            //         'Authorization': `${token}`\n            //     }\n            // }\n        )\n        console.log(\"restricted: \", resp.data)\n    }\n\n    useEffect(() => {\n        CheckStorage();\n    }, [])\n\n    return <div>\n        {showLogin && <>\n            <input type=\"text\" placeholder=\"username\" onChange={(e) => setUn(e.target.value)} />\n            <input type=\"password\" placeholder=\"password\" onChange={(e) => setPass(e.target.value)} />\n            <button onClick={Auth}>Login in</button>\n        </>\n        }\n        <button onClick={Restricted}>Restricted</button>\n    </div>\n}\nexport default Login;","/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/login.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/user.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/register.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/message.js",[],"/Users/ZhaoYuwen/Desktop/Evelyn-Frontend/review/src/pages/fullapp/index.js",["132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":22,"column":3,"nodeType":"139","messageId":"140","endLine":22,"endColumn":7},{"ruleId":"137","severity":1,"message":"141","line":28,"column":5,"nodeType":"139","messageId":"140","endLine":28,"endColumn":10},{"ruleId":"133","replacedBy":"142"},{"ruleId":"135","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":22,"column":8,"nodeType":"146","endLine":22,"endColumn":10,"suggestions":"147"},{"ruleId":"137","severity":1,"message":"148","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":13},{"ruleId":"137","severity":1,"message":"149","line":29,"column":11,"nodeType":"139","messageId":"140","endLine":29,"endColumn":21},{"ruleId":"137","severity":1,"message":"150","line":35,"column":11,"nodeType":"139","messageId":"140","endLine":35,"endColumn":21},{"ruleId":"137","severity":1,"message":"151","line":43,"column":11,"nodeType":"139","messageId":"140","endLine":43,"endColumn":22},{"ruleId":"137","severity":1,"message":"152","line":56,"column":11,"nodeType":"139","messageId":"140","endLine":56,"endColumn":19},{"ruleId":"137","severity":1,"message":"153","line":70,"column":11,"nodeType":"139","messageId":"140","endLine":70,"endColumn":23},{"ruleId":"137","severity":1,"message":"154","line":81,"column":13,"nodeType":"139","messageId":"140","endLine":81,"endColumn":17},{"ruleId":"137","severity":1,"message":"155","line":95,"column":13,"nodeType":"139","messageId":"140","endLine":95,"endColumn":17},{"ruleId":"137","severity":1,"message":"154","line":16,"column":9,"nodeType":"139","messageId":"140","endLine":16,"endColumn":13},{"ruleId":"137","severity":1,"message":"156","line":19,"column":7,"nodeType":"139","messageId":"140","endLine":19,"endColumn":14},{"ruleId":"137","severity":1,"message":"157","line":75,"column":12,"nodeType":"139","messageId":"140","endLine":75,"endColumn":20},{"ruleId":"137","severity":1,"message":"158","line":76,"column":12,"nodeType":"139","messageId":"140","endLine":76,"endColumn":17},{"ruleId":"137","severity":1,"message":"159","line":15,"column":12,"nodeType":"139","messageId":"140","endLine":15,"endColumn":16},{"ruleId":"137","severity":1,"message":"160","line":15,"column":18,"nodeType":"139","messageId":"140","endLine":15,"endColumn":25},{"ruleId":"137","severity":1,"message":"161","line":16,"column":12,"nodeType":"139","messageId":"140","endLine":16,"endColumn":15},{"ruleId":"137","severity":1,"message":"162","line":16,"column":17,"nodeType":"139","messageId":"140","endLine":16,"endColumn":23},{"ruleId":"137","severity":1,"message":"163","line":17,"column":12,"nodeType":"139","messageId":"140","endLine":17,"endColumn":15},{"ruleId":"137","severity":1,"message":"164","line":17,"column":17,"nodeType":"139","messageId":"140","endLine":17,"endColumn":23},{"ruleId":"144","severity":1,"message":"165","line":58,"column":8,"nodeType":"146","endLine":58,"endColumn":10,"suggestions":"166"},{"ruleId":"137","severity":1,"message":"167","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"165","line":69,"column":8,"nodeType":"146","endLine":69,"endColumn":10,"suggestions":"168"},{"ruleId":"144","severity":1,"message":"169","line":28,"column":8,"nodeType":"146","endLine":28,"endColumn":10,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'timer' is assigned a value but never used.",["171"],["172"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetData'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'Pagin' is defined but never used.","'ChangePage' is assigned a value but never used.","'FilterPage' is assigned a value but never used.","'FilterCheck' is assigned a value but never used.","'SortMsgs' is assigned a value but never used.","'SortMsgsDate' is assigned a value but never used.","'resp' is assigned a value but never used.","'date' is assigned a value but never used.","'Subject' is assigned a value but never used.","'register' is assigned a value but never used.","'login' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'bio' is assigned a value but never used.","'setBio' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'CheckStorage'. Either include it or remove the dependency array.",["174"],"'Items' is defined but never used.",["175"],"React Hook useEffect has a missing dependency: 'CheckToken'. Either include it or remove the dependency array.",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [GetData]",{"range":"184","text":"185"},"Update the dependencies array to be: [CheckStorage]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [CheckToken]",{"range":"189","text":"190"},[834,836],"[GetData]",[1894,1896],"[CheckStorage]",[2256,2258],[848,850],"[CheckToken]"]